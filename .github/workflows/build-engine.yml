name: 'Build engine'

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'

defaults:
  run:
    shell: pwsh

jobs:
  build-engine:
    name: 'Building'

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Debug
          - Mixed
          - Release
          - Debug_Dedicated
          - Mixed_Dedicated
          - Release_Dedicated
        platform:
          - x86

    runs-on: ${{ matrix.system }}

    env:
      solution_name: XRay.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get dependencies
      run: |
        ${{ github.workspace }}\get-dependencies.bat

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Build solution
      run: |
        msbuild $env:solution_name -p:Configuration=${{ matrix.config }} -p:Platform=${{ matrix.platform }} -r -m -nologo

    - name: Cleanup
      run: |
        if exist bin\*.idb (del /s bin\*.idb)
        if exist bin\*.ilk (del /s bin\*.ilk)
        if exist bin\*.pdb (del /s bin\*.pdb)
        if exist lib\*.idb (del /s lib\*.idb)
        if exist lib\*.pdb (del /s lib\*.pdb)
      shell: cmd

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: bin (${{ matrix.config }})
        path: bin/

    - name: Upload libraries
      uses: actions/upload-artifact@v3
      with:
        name: lib (${{ matrix.config }})
        path: lib/

    - name: Upload gamedata
      uses: actions/upload-artifact@v3
      with:
        name: gamedata
        path: gamedata/
